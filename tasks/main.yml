---
- name: Configure Postgres replica set
  include_role:
    name: devgateway.postgres-replication
  vars:
    pg_version: "{{ pgha_postgres.version }}"
    pgrs_master: "{{ pgha_master }}"
    pgrs_slave: "{{ pgha_slave }}"
    pgrs_virtual_ip: "{{ pgha_virtual_ip }}"
    pgrs_data_dir: "{{ pgha_postgres.data_dir }}"
    pgrs_bin_dir: "{{ pgha_postgres.bin_dir }}"
    pgrs_archive_dir: "{{ pgha_postgres.archive_dir }}"
    pgrs_service: "{{ pgha_postgres.service }}"
    pgrs_user:
      type: host
      name: "{{ pgha_repl_user }}"
      database: replication
      address: samenet
      method: md5
      password: "{{ pgha_repl_passwd }}"

- name: Disable and stop Postgres service
  service:
    name: "{{ pgha_postgres.service }}"
    enabled: false
    state: stopped

- name: Set up high availability
  include_role:
    name: devgateway.pacemaker
  vars:
    pacemaker_pretty_xml: true
    pacemaker_password: "{{ pgha_pcmk_passwd }}"
    pacemaker_cluster_name: "{{ pgha_pcmk_cluster_name }}"
    pacemaker_cluster_options:
      stonith-enabled: false
      no-quorum-policy: ignore
    pacemaker_resource_defaults:
      resource_stickiness: INFINITY
      migration_threshold: 1
    pacemaker_simple_resources:
      virtual-ip:
        resource:
          class: ocf
          provider: heartbeat
          type: IPaddr2
        options:
          ip: "{{ pgha_virtual_ip }}"
        meta:
          migration-threshold: 0
        op:
          - name: start
            timeout: "{{ pgha_pcmk_default_op_timeout }}s"
            interval: 0s
            on-fail: restart
          - name: monitor
            timeout: "{{ pgha_pcmk_default_op_timeout }}s"
            interval: "{{ pgha_pcmk_monitoring_intervals.virtual_ip }}s"
            on-fail: restart
          - name: stop
            timeout: "{{ pgha_pcmk_default_op_timeout }}s"
            interval: 0s
            on-fail: restart
    pacemaker_advanced_resources:
      postgres:
        type: master
        meta:
          master-max: 1
          master-node-max: 1
          clone-max: 2
          clone-node-max: 1
          notify: true
        resources:
          postgres-replica-set:
            resource:
              class: ocf
              provider: heartbeat
              type: pgsql
            options:
              pgctl: "{{ pgha_postgres.bin_dir }}/pg_ctl"
              psql: "{{ pgha_postgres.bin_dir }}/psql"
              pgdata: "{{ pgha_postgres.data_dir }}"
              rep_mode: sync
              node_list: "{{ pgha_master }} {{ pgha_slave }}"
              restore_command: "{{ pgha_postgres.restore_command }}"
              master_ip: "{{ pgha_virtual_ip }}"
              restart_on_promote: "true"
              repuser: "{{ pgha_repl_user }}"
            op:
              - name: start
                on-fail: restart
                interval: 0s
              - name: monitor
                interval: "{{ pgha_pcmk_monitoring_intervals.slave }}s"
                on-fail: restart
              - name: monitor
                role: Master
                interval: "{{ pgha_pcmk_monitoring_intervals.master }}s"
                on-fail: restart
              - name: promote
                on-fail: restart
                interval: 0s
              - name: demote
                on-fail: stop
                interval: 0s
              - name: stop
                on-fail: block
                interval: 0s
              - name: notify
                interval: 0s
    pacemaker_constraints:
      - type: colocation
        rsc: virtual-ip
        with-rsc: postgres
        with-rsc-role: Master
        score: INFINITY
      - type: order
        first: postgres
        first-action: promote
        then: virtual-ip
        then-action: start
        symmetrical: false
        score: INFINITY
      - type: order
        first: postgres
        first-action: demote
        then: virtual-ip
        then-action: stop
        symmetrical: false
        score: 0
